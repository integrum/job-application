module Autotest::GnomeNotify
 
  EXPIRATION_IN_SECONDS = 1
  BASE_RES_DIR = "#{File.dirname( __FILE__ )}/.autotest_res"
  ICON         = "gtk-dialog-info"
 
  class << self
    def notify( title, message, soundify )
      soundify.call if soundify
      options = "-t #{ EXPIRATION_IN_SECONDS * 1000 } -i #{ ICON }"
      system "notify-send #{ options } '#{ title }' '#{ message }'"
    end

    def get_examples_from( output )
      examples = output.match( /(\d+) example/ ) 
      examples ? examples[1].to_i : 0
    end

    def get_failures_from( output )
      failures = output.match( /(\d+) failure/ )
      failures ? failures[1].to_i : 0
    end

    def get_pending_from( output )
      pending  = output.match( /(\d+) pending/ )
      pending ? pending[1].to_i : 0
    end
  end
 
  Autotest.add_hook :initialize do |at|
    %w{.git .svn .hg .swp .DS_Store ._* tmp}.each do |exception|
      at.add_exception(exception)
    end
  end

  Autotest.add_hook :ran_command do |at|
    output   = at.results[-1]

    examples = get_examples_from output
    failures = get_failures_from output
    pending  = get_pending_from output
   
    unless pending.zero? and failures.zero?
      navi = lambda { system "mpg123 -q #{BASE_RES_DIR}/navi.mp3 &" }
    end
    
    notify( "Hey dude",
      "You got #{examples} examples, #{failures} failures, #{pending} pending",
      navi )
  end
end
